{
	"info": {
		"_postman_id": "8f370af4-f765-4d92-9e20-716620c85924",
		"name": "FastAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15877943"
	},
	"item": [
		{
			"name": "templates",
			"item": [
				{
					"name": "Create a new template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"baseTemplate1 = pm.collectionVariables.get(\"baseTemplate1\");\r",
									"descriptionTemplate1 = pm.collectionVariables.get(\"descriptionTemplate1\")\r",
									"\r",
									"pm.test(\"Status code 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Template create correctly\", function () {\r",
									"    var responseBody = pm.response.json();\r",
									"\r",
									"    pm.expect(pm.response).to.have.header('Content-Type', 'application/json');\r",
									"    pm.expect(responseBody).to.be.an('object');\r",
									"    pm.expect(responseBody).to.have.property('base');\r",
									"    pm.expect(responseBody).to.have.property('description');\r",
									"    pm.expect(responseBody).to.have.property('id');\r",
									"\r",
									"    pm.collectionVariables.set(\"idTemplate1\", responseBody.id)\r",
									"\r",
									"    pm.expect(responseBody.base).to.eql(baseTemplate1);\r",
									"    pm.expect(responseBody.description).to.eql(descriptionTemplate1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.clear();\r",
									"pm.collectionVariables.set(\"baseUrl\", \"127.0.0.1:8000\")\r",
									"pm.collectionVariables.set(\"baseTemplate1\", \"base1\");\r",
									"pm.collectionVariables.set(\"descriptionTemplate1\", \"description1\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"base\": \"{{baseTemplate1}}\",\n  \"description\": \"{{descriptionTemplate1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"templates"
							]
						},
						"description": "Create a new template"
					},
					"response": [
						{
							"name": "Template created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<integer>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update template by id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"baseTemplateToUpdate\", \"baseToUpdate\");\r",
									"pm.collectionVariables.set(\"descriptionTemplateToUpdate\", \"descriptionToUpdate\")\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"baseTemplateToUpdate = pm.collectionVariables.get(\"baseTemplateToUpdate\");\r",
									"descriptionTemplateToUpdate = pm.collectionVariables.get(\"descriptionTemplateToUpdate\")\r",
									"idTemplate1 = pm.collectionVariables.get(\"idTemplate1\")\r",
									"\r",
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Template retrieve correctly\", function () {\r",
									"    var responseBody = pm.response.json();\r",
									"\r",
									"    pm.expect(pm.response.json()).to.be.an('object');\r",
									"    pm.expect(pm.response.json()).to.have.property('id');\r",
									"    pm.expect(pm.response.json()).to.have.property('base');\r",
									"    pm.expect(pm.response.json()).to.have.property('description');\r",
									"    pm.expect(pm.response.json()).to.have.property('base_markers').that.is.an('array');\r",
									"    pm.expect(pm.response.json()).to.have.property('composite_markers').that.is.an('array');\r",
									"\r",
									"    pm.expect(responseBody.id).to.eql(idTemplate1) \r",
									"    pm.expect(responseBody.base).to.eql(baseTemplateToUpdate);\r",
									"    pm.expect(responseBody.description).to.eql(descriptionTemplateToUpdate);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"base\": \"{{baseTemplateToUpdate}}\",\n  \"description\": \"{{descriptionTemplateToUpdate}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/templates/{{idTemplate1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"templates",
								"{{idTemplate1}}"
							]
						},
						"description": "Update template by id"
					},
					"response": [
						{
							"name": "Template updated successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"base\": \"<string>\",\n  \"description\": \"<string>\",\n  \"base_markers\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"options\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"options\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_id\": \"<integer>\"\n    }\n  ],\n  \"composite_markers\": [\n    {\n      \"id\": \"<integer>\",\n      \"options\": {\n        \"non2d\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"in393\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"template_id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"options\": {\n        \"velit_194\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolor2\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore_30e\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"template_id\": \"<integer>\"\n    }\n  ]\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get template by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"baseTemplateToUpdate = pm.collectionVariables.get(\"baseTemplateToUpdate\");\r",
									"descriptionTemplateToUpdate = pm.collectionVariables.get(\"descriptionTemplateToUpdate\")\r",
									"idTemplate1 = pm.collectionVariables.get(\"idTemplate1\")\r",
									"\r",
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Templeta retrieve\", function () {\r",
									"    var responseBody = pm.response.json();\r",
									"\r",
									"    pm.expect(pm.response.json()).to.be.an('object');\r",
									"    pm.expect(pm.response.json()).to.have.property('id');\r",
									"    pm.expect(pm.response.json()).to.have.property('base');\r",
									"    pm.expect(pm.response.json()).to.have.property('description');\r",
									"    pm.expect(pm.response.json()).to.have.property('base_markers').that.is.an('array');\r",
									"    pm.expect(pm.response.json()).to.have.property('composite_markers').that.is.an('array');\r",
									"\r",
									"    pm.expect(responseBody.id).to.eql(idTemplate1) \r",
									"    pm.expect(responseBody.base).to.eql(baseTemplateToUpdate);\r",
									"    pm.expect(responseBody.description).to.eql(descriptionTemplateToUpdate);\r",
									"    \r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/templates/{{idTemplate1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"templates",
								"{{idTemplate1}}"
							]
						},
						"description": "Get template by id"
					},
					"response": [
						{
							"name": "Template",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"base\": \"<string>\",\n  \"description\": \"<string>\",\n  \"base_markers\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"options\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"options\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_id\": \"<integer>\"\n    }\n  ],\n  \"composite_markers\": [\n    {\n      \"id\": \"<integer>\",\n      \"options\": {\n        \"non2d\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"in393\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"template_id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"options\": {\n        \"velit_194\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolor2\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore_30e\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"template_id\": \"<integer>\"\n    }\n  ]\n}"
						},
						{
							"name": "Template not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get all templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})\r",
									"\r",
									"pm.test(\"Templates retrieve\", function () {\r",
									"    var responseBody = pm.response.json();\r",
									"    var dataArray = responseBody;\r",
									"\r",
									"    pm.expect(pm.response).to.have.header('Content-Type', 'application/json');\r",
									"    pm.expect(responseBody).to.be.an('array');\r",
									"\r",
									"    if(dataArray.length == 0){\r",
									"        pm.expect(dataArray).to.be.empty;\r",
									"    } else {\r",
									"        pm.expect(dataArray.length).to.above(0);\r",
									"\r",
									"        var allProperties = dataArray.every(da => da.hasOwnProperty(\"id\"))\r",
									"        pm.expect(allProperties).to.be.true\r",
									"    }\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"templates"
							]
						},
						"description": "Get all templates"
					},
					"response": [
						{
							"name": "List of templates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"base\": \"<string>\",\n    \"description\": \"<string>\",\n    \"base_markers\": [\n      {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"options\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"template_id\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"options\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"template_id\": \"<integer>\"\n      }\n    ],\n    \"composite_markers\": [\n      {\n        \"id\": \"<integer>\",\n        \"options\": {\n          \"proident4\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"consequat_0\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"proident_c\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"eiusmod_830\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"template_id\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"options\": {\n          \"adipisicing588\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"nisi_f\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"template_id\": \"<integer>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<integer>\",\n    \"base\": \"<string>\",\n    \"description\": \"<string>\",\n    \"base_markers\": [\n      {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"options\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"template_id\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"options\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"template_id\": \"<integer>\"\n      }\n    ],\n    \"composite_markers\": [\n      {\n        \"id\": \"<integer>\",\n        \"options\": {\n          \"ipsum__b\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"template_id\": \"<integer>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"options\": {\n          \"nostrud_935\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"velit_b\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"sunt_3\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"template_id\": \"<integer>\"\n      }\n    ]\n  }\n]"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete template by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 204\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/templates/{{idTemplate1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"templates",
								"{{idTemplate1}}"
							]
						},
						"description": "Delete template by id"
					},
					"response": [
						{
							"name": "Delete template by id",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<integer>\"\n}"
						},
						{
							"name": "Template deleted successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Template not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Check delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/templates/{{idTemplate1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"templates",
								"{{idTemplate1}}"
							]
						},
						"description": "Get template by id"
					},
					"response": [
						{
							"name": "Template",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"base\": \"<string>\",\n  \"description\": \"<string>\",\n  \"base_markers\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"options\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"options\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"template_id\": \"<integer>\"\n    }\n  ],\n  \"composite_markers\": [\n    {\n      \"id\": \"<integer>\",\n      \"options\": {\n        \"non2d\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"in393\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"template_id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"options\": {\n        \"velit_194\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolor2\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore_30e\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"template_id\": \"<integer>\"\n    }\n  ]\n}"
						},
						{
							"name": "Template not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create a new template 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"baseTemplate1 = pm.collectionVariables.get(\"baseTemplate1\");\r",
									"descriptionTemplate1 = pm.collectionVariables.get(\"descriptionTemplate1\")\r",
									"\r",
									"pm.test(\"Status code 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Template create correctly\", function () {\r",
									"    var responseBody = pm.response.json();\r",
									"\r",
									"    pm.expect(pm.response).to.have.header('Content-Type', 'application/json');\r",
									"    pm.expect(responseBody).to.be.an('object');\r",
									"    pm.expect(responseBody).to.have.property('base');\r",
									"    pm.expect(responseBody).to.have.property('description');\r",
									"    pm.expect(responseBody).to.have.property('id');\r",
									"\r",
									"    pm.collectionVariables.set(\"idTemplate1\", responseBody.id)\r",
									"\r",
									"    pm.expect(responseBody.base).to.eql(baseTemplate1);\r",
									"    pm.expect(responseBody.description).to.eql(descriptionTemplate1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"base\": \"{{baseTemplate1}}\",\n  \"description\": \"{{descriptionTemplate1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"templates"
							]
						},
						"description": "Create a new template"
					},
					"response": [
						{
							"name": "Template created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\",\n  \"id\": \"<integer>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "base_markers",
			"item": [
				{
					"name": "Create a new base marker",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"nameBaseMarker1\", \"nameBaseMarker\")\r",
									"pm.collectionVariables.set(\"descriptionBaseMarker1\", \"descriptionBaseMarker\")\r",
									"pm.collectionVariables.set(\"optionsBaseMarker1\", '[\"option1\", \"option2\"]')\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nameBaseMarker1 = pm.collectionVariables.get(\"nameBaseMarker1\")\r",
									"var descriptionBaseMarker1 = pm.collectionVariables.get(\"descriptionBaseMarker1\")\r",
									"var optionsBaseMarker1 = pm.collectionVariables.get(\"optionsBaseMarker1\")\r",
									"\r",
									"pm.test(\"Status code 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Base Marker create correctly\", function () {\r",
									"    var responseBody = pm.response.json();\r",
									"\r",
									"    pm.expect(pm.response).to.have.header('Content-Type', 'application/json');\r",
									"    pm.expect(responseBody).to.be.an('object');\r",
									"    pm.expect(responseBody).to.have.property('name');\r",
									"    pm.expect(responseBody).to.have.property('description');\r",
									"    pm.expect(responseBody).to.have.property('id');\r",
									"    pm.expect(responseBody).to.have.property('options')\r",
									"\r",
									"    pm.collectionVariables.set(\"idBaseMarker1\", responseBody.id)\r",
									"\r",
									"    pm.expect(responseBody.name).to.eql(nameBaseMarker1);\r",
									"    pm.expect(responseBody.description).to.eql(descriptionBaseMarker1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{nameBaseMarker1}}\",\n  \"description\": \"{{descriptionBaseMarker1}}\",\n  \"options\": {{optionsBaseMarker1}},\n  \"template_id\": \"{{idTemplate1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/base_markers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"base_markers"
							]
						},
						"description": "Create a new base marker"
					},
					"response": [
						{
							"name": "Base marker created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/base_markers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\"\n}"
						},
						{
							"name": "Template not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/base_markers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/base_markers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/base_markers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update a base marker",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"nameBaseMarkerToUpdate\", \"name to update\")\r",
									"pm.collectionVariables.set(\"descriptionBaseMarkerToUpdate\", \"description to update\")\r",
									"var idBaseMarker1 = pm.collectionVariables.get(\"idBaseMarker1\")"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nameBaseMarkerToUpdate = pm.collectionVariables.get(\"nameBaseMarkerToUpdate\");\r",
									"var descriptionBaseMarkerToUpdate = pm.collectionVariables.get(\"descriptionBaseMarkerToUpdate\");\r",
									"var idBaseMarker1 = pm.collectionVariables.get(\"idBaseMarker1\");\r",
									"\r",
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Base Marker create correctly\", function () {\r",
									"    var responseBody = pm.response.json();\r",
									"\r",
									"    console.log(responseBody)\r",
									"\r",
									"    pm.expect(pm.response).to.have.header('Content-Type', 'application/json');\r",
									"    pm.expect(responseBody).to.be.an('object');\r",
									"    pm.expect(responseBody).to.have.property('name');\r",
									"    pm.expect(responseBody).to.have.property('description');\r",
									"    pm.expect(responseBody).to.have.property('id');\r",
									"    pm.expect(responseBody).to.have.property('options');\r",
									"\r",
									"\r",
									"    pm.expect(responseBody.name).to.eql(nameBaseMarkerToUpdate);\r",
									"    pm.expect(responseBody.description).to.eql(descriptionBaseMarkerToUpdate);\r",
									"    pm.expect(responseBody.id).to.eq(idBaseMarker1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{nameBaseMarkerToUpdate}}\",\n  \"description\": \"{{descriptionBaseMarkerToUpdate}}\",\n  \"options\": {{optionsBaseMarker1}},\n  \"template_id\": \"{{idTemplate1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/base_markers/{{idBaseMarker1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"base_markers",
								"{{idBaseMarker1}}"
							]
						},
						"description": "Update a base marker"
					},
					"response": [
						{
							"name": "Base marker updated successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\",\n  \"id\": \"<integer>\"\n}"
						},
						{
							"name": "Base marker not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get base marker by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nameBaseMarkerToUpdate = pm.collectionVariables.get(\"nameBaseMarkerToUpdate\");\r",
									"var descriptionBaseMarkerToUpdate = pm.collectionVariables.get(\"descriptionBaseMarkerToUpdate\");\r",
									"var idBaseMarker1 = pm.collectionVariables.get(\"idBaseMarker1\");\r",
									"var idTemplate1 = pm.collectionVariables.get(\"idTemplate1\")\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code 200\", function () {\r",
									"     pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Base marker retrieve\", function () {\r",
									"    var responseBody = pm.response.json();\r",
									"\r",
									"    pm.expect(responseBody).to.be.an('object');\r",
									"    pm.expect(responseBody).to.have.property('id');\r",
									"    pm.expect(responseBody).to.have.property('name');\r",
									"    pm.expect(responseBody).to.have.property('description');\r",
									"    pm.expect(responseBody.options).to.be.an('array');\r",
									"    pm.expect(responseBody).to.have.property('template_id');\r",
									"\r",
									"    pm.expect(responseBody.id).to.be.eql(idBaseMarker1);\r",
									"    pm.expect(responseBody.template_id).to.be.eql(idTemplate1);\r",
									"    pm.expect(responseBody.name).to.be.eql(nameBaseMarkerToUpdate);\r",
									"    pm.expect(responseBody.description).to.be.eql(descriptionBaseMarkerToUpdate);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/base_markers/{{idBaseMarker1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"base_markers",
								"{{idBaseMarker1}}"
							]
						},
						"description": "Get base marker by id"
					},
					"response": [
						{
							"name": "Base marker found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\"\n}"
						},
						{
							"name": "Base marker not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get base markers by template id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var idTemplate1 = pm.collectionVariables.get(\"idTemplate1\");\r",
									"\r",
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Base Markers retrieve\", function () {\r",
									"    pm.expect(pm.response.json()).to.be.an('array');\r",
									"    pm.expect(pm.response.json()).to.not.be.empty;\r",
									"    pm.response.json().forEach((marker) => {\r",
									"     pm.expect(marker).to.have.property('id');\r",
									"     pm.expect(marker).to.have.property('name');\r",
									"     pm.expect(marker).to.have.property('description');\r",
									"     pm.expect(marker).to.have.property('options');\r",
									"     pm.expect(marker.options).to.be.an('array');\r",
									"     pm.expect(marker).to.have.property('template_id');\r",
									"     pm.expect(marker.template_id).to.be.eql(idTemplate1)\r",
									"    });\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/base_markers/template/{{idTemplate1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"base_markers",
								"template",
								"{{idTemplate1}}"
							]
						},
						"description": "Get base markers by template id"
					},
					"response": [
						{
							"name": "List of base markers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										"template",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"options\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"template_id\": \"<integer>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"options\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"template_id\": \"<integer>\"\n  }\n]"
						},
						{
							"name": "Template not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										"template",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										"template",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										"template",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get all base markers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200\", function () {\r",
									"     pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Base markers retrieve\", function () {\r",
									"    pm.expect(pm.response.json()).to.be.an('array');\r",
									"    pm.response.json().forEach((marker) => {\r",
									"     pm.expect(marker).to.have.property('id');\r",
									"     pm.expect(marker).to.have.property('name');\r",
									"     pm.expect(marker).to.have.property('description');\r",
									"     pm.expect(marker).to.have.property('options').that.is.an('array');\r",
									"     pm.expect(marker).to.have.property('template_id');\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/base_markers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"base_markers"
							]
						},
						"description": "Get all base markers"
					},
					"response": [
						{
							"name": "List of base markers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"options\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"template_id\": \"<integer>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"options\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"template_id\": \"<integer>\"\n  }\n]"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete a base marker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 204\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/base_markers/{{idBaseMarker1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"base_markers",
								"{{idBaseMarker1}}"
							]
						},
						"description": "Delete a base marker"
					},
					"response": [
						{
							"name": "Base marker deleted successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\",\n  \"id\": \"<integer>\"\n}"
						},
						{
							"name": "Base marker not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Check delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.test.skip(\"Status code 404\", function () {\r",
									"    console.log(pm.response)\r",
									"    pm.expect(pm.response.code).to.equal(404);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/base_markers/{{idBaseMarker1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"base_markers",
								"{{idBaseMarker1}}"
							]
						},
						"description": "Get base marker by id"
					},
					"response": [
						{
							"name": "Base marker found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"options\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"template_id\": \"<integer>\"\n}"
						},
						{
							"name": "Base marker not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/base_markers/:base_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"base_markers",
										":base_marker_id"
									],
									"variable": [
										{
											"key": "base_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "composite_markers",
			"item": [
				{
					"name": "Create Composite Marker",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"compositeMarkerOptions1\", '[\"option2\", \"option22\"]')"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var compositeMarkerOptions1 = pm.collectionVariables.get(\"compositeMarkerOptions1\");\r",
									"var baseMarkerOptions = pm.collectionVariables.get(\"optionsBaseMarker1\");\r",
									"\r",
									"pm.test(\"Status code 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Composite Marker retrieve\", function () {\r",
									"    var responseBody = pm.response.json()\r",
									"\r",
									"    pm.expect(responseBody).to.be.an('object');\r",
									"    pm.expect(responseBody.id).to.exist;\r",
									"    pm.expect(responseBody.options).to.be.an('object');\r",
									"    pm.expect(responseBody.options.option1).to.be.an('array');\r",
									"    pm.expect(responseBody.options.option2).to.be.an('array');\r",
									"    pm.expect(responseBody.template_id).to.exist;\r",
									"\r",
									"    pm.collectionVariables.set(\"idCompositeMarker1\", responseBody.id);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"options\": {\n        \"option1\": {{optionsBaseMarker1}},\n        \"option2\": {{compositeMarkerOptions1}}\n    },\n    \"template_id\": \"{{idTemplate1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/composite_markers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"composite_markers"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"options\": {\n    \"amet_46_\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"in_d05\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/composite_markers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"options\": {\n    \"amet_5\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nisi4d\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"template_id\": \"<integer>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"options\": {\n    \"amet_46_\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"in_d05\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/composite_markers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Update composite marker by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var idTemplate1 = pm.variables.get(\"idTemplate1\");\r",
									"\r",
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Composite Marker retrieve\", function () {\r",
									"    var responseBody = pm.response.json();\r",
									"\r",
									"    pm.expect(responseBody).to.be.an('object');\r",
									"    pm.expect(responseBody.id).to.exist;\r",
									"    pm.expect(responseBody.options).to.be.an('object');\r",
									"    pm.expect(responseBody.options.option1).to.be.an('array');\r",
									"    pm.expect(responseBody.options.option1.length).to.be.gt(0);\r",
									"    pm.expect(responseBody.template_id).to.exist;\r",
									"    pm.expect(responseBody.template_id).to.be.eql(idTemplate1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"options\": {\n        \"option1\": {{optionsBaseMarker1}}\n    },\n    \"template_id\": \"{{idTemplate1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/composite_markers/{{idCompositeMarker1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"composite_markers",
								"{{idCompositeMarker1}}"
							]
						},
						"description": "Update composite marker by id"
					},
					"response": [
						{
							"name": "Composite marker updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"options\": {\n    \"incididunt_5b\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"velit4_8\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Excepteura5e\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"options\": {\n    \"amet_5\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nisi4d\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"template_id\": \"<integer>\"\n}"
						},
						{
							"name": "Template not found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"options\": {\n    \"incididunt_5b\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"velit4_8\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Excepteura5e\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"options\": {\n    \"incididunt_5b\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"velit4_8\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Excepteura5e\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"options\": {\n    \"incididunt_5b\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"velit4_8\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Excepteura5e\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"template_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get composite marker by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var idCompositeMarker1 = pm.collectionVariables.get(\"idCompositeMarker1\")\r",
									"var idTemplate1 = pm.collectionVariables.get(\"idTemplate1\")\r",
									"\r",
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Composite Marker retrieve\", function () {\r",
									"    var responseBody = pm.response.json()\r",
									"\r",
									"    pm.expect(responseBody).to.be.an('object');\r",
									"    pm.expect(responseBody.id).to.exist;\r",
									"    pm.expect(responseBody.options).to.be.an('object');\r",
									"    pm.expect(responseBody.options.option1).to.be.an('array');\r",
									"    pm.expect(responseBody.template_id).to.exist;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/composite_markers/{{idCompositeMarker1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"composite_markers",
								"{{idCompositeMarker1}}"
							]
						},
						"description": "Get composite marker by id"
					},
					"response": [
						{
							"name": "Composite marker found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"options\": {\n    \"amet_5\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nisi4d\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"template_id\": \"<integer>\"\n}"
						},
						{
							"name": "Composite marker not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all composite markers by template id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var idTemplate1 = pm.collectionVariables.get(\"idTemplate1\");\r",
									"\r",
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Base Markers retrieve\", function () {\r",
									"    pm.expect(pm.response.json()).to.be.an('array');\r",
									"    pm.expect(pm.response.json()).to.not.be.empty;\r",
									"    pm.response.json().forEach((marker) => {\r",
									"     pm.expect(marker).to.have.property('id');\r",
									"     pm.expect(marker).to.have.property('template_id');\r",
									"     pm.expect(marker.template_id).to.be.eql(idTemplate1)\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/composite_markers/template/{{idTemplate1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"composite_markers",
								"template",
								"{{idTemplate1}}"
							]
						},
						"description": "Get all composite markers by template id"
					},
					"response": [
						{
							"name": "List of composite markers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										"template",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"options\": {\n      \"in_5\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"minim9\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"template_id\": \"<integer>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"options\": {\n      \"quia9\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"in_a09\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"template_id\": \"<integer>\"\n  }\n]"
						},
						{
							"name": "Template not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										"template",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										"template",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/template/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										"template",
										":template_id"
									],
									"variable": [
										{
											"key": "template_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all composite markers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Base Markers retrieve\", function () {\r",
									"    pm.expect(pm.response.json()).to.be.an('array');\r",
									"    pm.expect(pm.response.json()).to.not.be.empty;\r",
									"    pm.response.json().forEach((marker) => {\r",
									"     pm.expect(marker).to.have.property('id');\r",
									"     pm.expect(marker).to.have.property('template_id');\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/composite_markers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"composite_markers"
							]
						},
						"description": "Get all composite markers"
					},
					"response": [
						{
							"name": "List of composite markers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"options\": {\n      \"voluptate_1\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"in83\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"consecteturbef\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"template_id\": \"<integer>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"options\": {\n      \"sintf\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"sint_0\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ullamco_d\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"eu_d6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"template_id\": \"<integer>\"\n  }\n]"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/composite_markers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete composite marker by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 204\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/composite_markers/{{idCompositeMarker1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"composite_markers",
								"{{idCompositeMarker1}}"
							]
						},
						"description": "Delete composite marker by id"
					},
					"response": [
						{
							"name": "Composite marker deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"options\": {\n    \"amet_5\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nisi4d\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"template_id\": \"<integer>\"\n}"
						},
						{
							"name": "Template deleted succesfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Composite marker not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test.skip(\"Status code 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/composite_markers/{{idCompositeMarker1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"composite_markers",
								"{{idCompositeMarker1}}"
							]
						},
						"description": "Get composite marker by id"
					},
					"response": [
						{
							"name": "Composite marker found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"options\": {\n    \"amet_5\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"nisi4d\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"template_id\": \"<integer>\"\n}"
						},
						{
							"name": "Composite marker not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/composite_markers/:composite_marker_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"composite_markers",
										":composite_marker_id"
									],
									"variable": [
										{
											"key": "composite_marker_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "input",
			"item": [
				{
					"name": "Generate Input",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/input/generate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"input",
								"generate"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/input/generate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"input",
										"generate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"query\": \"<string>\",\n  \"type\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Generate With Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/input/generateWithTemplate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"input",
								"generateWithTemplate"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/input/generateWithTemplate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"input",
										"generateWithTemplate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"query\": \"<string>\",\n  \"type\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"base\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/input/generateWithTemplate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"input",
										"generateWithTemplate"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseTemplate1",
			"value": ""
		},
		{
			"key": "descriptionTemplate1",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "idTemplate1",
			"value": ""
		},
		{
			"key": "baseTemplateToUpdate",
			"value": ""
		},
		{
			"key": "descriptionTemplateToUpdate",
			"value": ""
		},
		{
			"key": "nameBaseMarker1",
			"value": ""
		},
		{
			"key": "descriptionBaseMarker1",
			"value": ""
		},
		{
			"key": "optionsBaseMarker1",
			"value": ""
		},
		{
			"key": "idBaseMarker1",
			"value": ""
		},
		{
			"key": "nameBaseMarkerToUpdate",
			"value": ""
		},
		{
			"key": "descriptionBaseMarkerToUpdate",
			"value": ""
		},
		{
			"key": "compositeMarkerOptions1",
			"value": ""
		},
		{
			"key": "idCompositeMarker1",
			"value": ""
		}
	]
}